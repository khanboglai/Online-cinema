services:
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   hostname: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
    
  postgres:
    image: postgres:16.4
    container_name: cinema_postgres_db
    environment:
      POSTGRES_USER: debug
      POSTGRES_PASSWORD: pswd
      POSTGRES_DB: cinema
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U debug -d cinema" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  web:
    build:
      context: ./web_api
      dockerfile: Dockerfile_web
    container_name: web
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      # - elasticsearch
      # - rabbitmq
    environment:
      DB_USER: debug
      DB_PASSWORD: pswd
      DB_HOST: cinema_postgres_db
      DB_PORT: 5432
      DB_NAME: cinema
      SECRET_KEY: 'z9t9w6dluej8fupds3fvefoozz6wlymglropksbavn32ehin9lclertyweco4rhri2weg1r3s0x4024yup42ufg4rgt6830tbfvm'
      ALGORITHM: 'HS256'
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
    volumes:
      - ./web_api:/app

  # ml:
  #   build: 
  #     context: ./ml_api
  #     dockerfile: Dockerfile_ml
  #   container_name: ml
  #   depends_on:
  #     - rabbitmq
  #   restart: always
  #   ports:
  #     - "8080:8080"

  # elasticsearch:
  #   image: elasticsearch:7.17.26
  #   container_name: cinema_elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1G 

  storage:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # Порт для доступа к MinIO
      - "9001:9001"  # Порт для веб-консоли
    environment:
      MINIO_ACCESS_KEY: storage
      MINIO_SECRET_KEY: qwerty2024
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data  # Хранение данных MinIO

  # scheduler:
  #   build:
  #     context: ./scheduler
  #     dockerfile: Dockerfile_scheduler
  #   container_name: scheduler
  #   depends_on:
  #     - rabbitmq
  #   restart: always
  #   ports:
  #     - "8085:8085"


volumes:
  pgdata:
    driver: local
  esdata:
    driver: local
  minio_data:
  rabbitmq_data:
